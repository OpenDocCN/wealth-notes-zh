- en: 沃顿商学院《商务基础》｜Business Foundations Specialization｜（中英字幕） - P124：8_改进流程的工具.zh_en
    - GPT中英字幕课程资源 - BV1R34y1c74c
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The reason why we analyze processes， the reason why we compute things such as
    idle time and。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9b6fd09fcb13737b41c5937ff2ba7bb5_1.png)'
  prefs: []
  type: TYPE_IMG
- en: labor utilization levels or the cost of direct labor is of course to improve
    the process。
  prefs: []
  type: TYPE_NORMAL
- en: We want to make things better。 In today's video I will introduce three tools
    that will help you improve your process。
  prefs: []
  type: TYPE_NORMAL
- en: I will refer to them as offloading the bottleneck， balancing the line using
    tech time， and we'll。
  prefs: []
  type: TYPE_NORMAL
- en: talk about specialization。 Let's start with the idea of offloading the bottleneck。
    In 1984。
  prefs: []
  type: TYPE_NORMAL
- en: Ellie Goldret wrote a highly successful book entitled "The Goal。"。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9b6fd09fcb13737b41c5937ff2ba7bb5_3.png)'
  prefs: []
  type: TYPE_IMG
- en: Hard to believe that the book is about operations management and its operations
    management textbook。
  prefs: []
  type: TYPE_NORMAL
- en: written as a novel。 Unlike my books， it has sold millions of copies。
  prefs: []
  type: TYPE_NORMAL
- en: The hero of the book is a fictitious plan manager by the name of Alex， who discovers
    the。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9b6fd09fcb13737b41c5937ff2ba7bb5_5.png)'
  prefs: []
  type: TYPE_IMG
- en: principles of process analysis。 Alex has his epiphany when he takes a group
    of boy scouts for hiking the forest。
  prefs: []
  type: TYPE_NORMAL
- en: The group takes a single file path and sets us close to each other。 But the
    longer they march。
  prefs: []
  type: TYPE_NORMAL
- en: the more the group spreads out。 The boys in the front tend to be the fast ones。
  prefs: []
  type: TYPE_NORMAL
- en: so they walk at their own rate leaving， the others behind。
  prefs: []
  type: TYPE_NORMAL
- en: One shall be scoured by the name of Herbie， is holding the group back。
  prefs: []
  type: TYPE_NORMAL
- en: He has hundreds of meters of empty trail in front of him， and a group of impatient
    boy， scouts that。
  prefs: []
  type: TYPE_NORMAL
- en: due to the narrowness of the trail， cannot overtake him behind him。
  prefs: []
  type: TYPE_NORMAL
- en: Alex realizes that this hike has a lot in common with his production process。
  prefs: []
  type: TYPE_NORMAL
- en: He associates the speed with which the entire group is moving with the flow
    rate in the plant。
  prefs: []
  type: TYPE_NORMAL
- en: Just as the plant cannot produce faster than the bottleneck， the group of boy
    scouts cannot。
  prefs: []
  type: TYPE_NORMAL
- en: walk faster than Herbie。 So any process improvement starts by looking at the
    bottleneck。
  prefs: []
  type: TYPE_NORMAL
- en: In the case of Herbie， Alex soon found out that this ability to walk as fast
    as the other。
  prefs: []
  type: TYPE_NORMAL
- en: kids was not just constrained by his theological limitations， but also by Herbie
    carrying a。
  prefs: []
  type: TYPE_NORMAL
- en: rather large and heavy backpack with plenty of snacks inside。
  prefs: []
  type: TYPE_NORMAL
- en: To improve the hiking speed of the group， Alex then takes Herbie's backpack
    and puts the。
  prefs: []
  type: TYPE_NORMAL
- en: content up among the other faster scouts。 Yes， those scouts are now slowed down
    a bit。
  prefs: []
  type: TYPE_NORMAL
- en: but Herbie is able to walk faster， and that， is all that counts。 In general。
  prefs: []
  type: TYPE_NORMAL
- en: we refer to the improvement strategy of moving work away from the bottleneck
    as。
  prefs: []
  type: TYPE_NORMAL
- en: '"offloading the bottleneck"。 Offloading the bottleneck can take mind to perform。
    First。'
  prefs: []
  type: TYPE_NORMAL
- en: we can think about reassigning activities to other resources with more capacity，
    an improvement。
  prefs: []
  type: TYPE_NORMAL
- en: strategy that we will refer to in a moment as "line balancing"。 Second。
  prefs: []
  type: TYPE_NORMAL
- en: we can think about automating some of the activities， consuming time at the
    bottleneck。
  prefs: []
  type: TYPE_NORMAL
- en: by using technology。 For example， we might be able to automate the dispensing
    of a wrapping paper。
  prefs: []
  type: TYPE_NORMAL
- en: which has， the potential of reducing the processing time for employee number
    two。 As a side note。
  prefs: []
  type: TYPE_NORMAL
- en: McDonald's key innovations on their way to becoming the fast food empire。
  prefs: []
  type: TYPE_NORMAL
- en: was the invention of a condiment dispenser， which would provide an exact supply
    of ketchup。
  prefs: []
  type: TYPE_NORMAL
- en: or mayonnaise by the pressing of a button。 Third， we can think about outsourcing
    some of the activities consuming time at the bottleneck。
  prefs: []
  type: TYPE_NORMAL
- en: Imagine it would be possible to put the condiments in the back at the beginning
    of the shift。
  prefs: []
  type: TYPE_NORMAL
- en: or to even purchase back that are already loaded with condiments。
  prefs: []
  type: TYPE_NORMAL
- en: This would reduce the time for employee number two， which， given that employee
    number two。
  prefs: []
  type: TYPE_NORMAL
- en: is the bottleneck， would increase the capacity of the process。 Next。
  prefs: []
  type: TYPE_NORMAL
- en: let's turn to line balancing and tack time。 In our prior calculations。
  prefs: []
  type: TYPE_NORMAL
- en: we found the capacity of the three-person line to be about 78 sandwiches， per
    hour。
  prefs: []
  type: TYPE_NORMAL
- en: What are you doing when demand is higher？ The busy stores at lunchtime have
    demands all the way up to 160 sandwiches an hour。
  prefs: []
  type: TYPE_NORMAL
- en: And for that， well， we clearly need more labor。 So I want you to wrestle with
    two questions while you put me on pause。
  prefs: []
  type: TYPE_NORMAL
- en: The first one is about the cycle time。 What cycle time do you need to hit to
    serve 160 customers per hour？
  prefs: []
  type: TYPE_NORMAL
- en: And the second one is on staffing。 How many workers will you need？ Okay， put
    me on pause now。
  prefs: []
  type: TYPE_NORMAL
- en: All right， here we go again。 Let's get this done together。
  prefs: []
  type: TYPE_NORMAL
- en: So what cycle time do you need to meet the amount of 160 sandwiches per hour？
    Well。
  prefs: []
  type: TYPE_NORMAL
- en: there are 3600 seconds in an hour， and I want to make myself 160 sandwiches
    during， that hour。
  prefs: []
  type: TYPE_NORMAL
- en: So the hours cancel out， and I'm going to get 22。5 seconds per sandwich。
  prefs: []
  type: TYPE_NORMAL
- en: It is the cycle time I need to achieve to meet demand。 In a moment。
  prefs: []
  type: TYPE_NORMAL
- en: we're going to refer to this number as the tech time。 That's going to be the
    tech of demand。
  prefs: []
  type: TYPE_NORMAL
- en: Tech really tells us how fast we have to run， and in what cadence we have to
    operate to。
  prefs: []
  type: TYPE_NORMAL
- en: be in sync with demand。 That's the whole idea of tech。
  prefs: []
  type: TYPE_NORMAL
- en: Tech also helps us find out how many people we need to hire at the very minimum。
  prefs: []
  type: TYPE_NORMAL
- en: That number is not going to be an exact number， but it gives us a lower bound。
  prefs: []
  type: TYPE_NORMAL
- en: The logic behind this is as follows。 We're going to look here at the 120 seconds
    of labor that I know are in a sandwich。
  prefs: []
  type: TYPE_NORMAL
- en: That is our labor content， 120 seconds per unit。 And we're going to divide it
    by the tech time。
  prefs: []
  type: TYPE_NORMAL
- en: the 22。5 seconds per unit。 And so we have seconds per unit in the nominator。
  prefs: []
  type: TYPE_NORMAL
- en: and also seconds per unit in the denominator， so that cancels out。
  prefs: []
  type: TYPE_NORMAL
- en: And we're going to go and get a staffing level of a minimum of 5。33。
  prefs: []
  type: TYPE_NORMAL
- en: If we round this up to the next integer， I see that at the minimum， I need six
    workers。
  prefs: []
  type: TYPE_NORMAL
- en: It's not going to be exact， but it's the target。 We're going to see in the next
    slide。
  prefs: []
  type: TYPE_NORMAL
- en: that they actually would need a little bit more， labor than that。
  prefs: []
  type: TYPE_NORMAL
- en: But this number really provides a first-grid shot。 So let me formalize this。
  prefs: []
  type: TYPE_NORMAL
- en: We formally now define tech time as a ratio between the available time and the
    demand rate。
  prefs: []
  type: TYPE_NORMAL
- en: So available time was in our example， 3600 seconds per hour， and we want to
    have 160 units per。
  prefs: []
  type: TYPE_NORMAL
- en: hour of demand。 So the tech is 22。5 seconds per unit。
  prefs: []
  type: TYPE_NORMAL
- en: The word "tact" comes from the German word "tacht"， which is used in the musical
    world。
  prefs: []
  type: TYPE_NORMAL
- en: We want to make sure that not every musician is playing a taser or her own pace，
    but everybody。
  prefs: []
  type: TYPE_NORMAL
- en: stays in sync。 So I think it's very appropriate to use the word "tact" in the
    case of process analysis。
  prefs: []
  type: TYPE_NORMAL
- en: Let me emphasize that a "tact" time is an ambition。 It is a target。
  prefs: []
  type: TYPE_NORMAL
- en: It does not depend on the capacity or the capability of the process。
  prefs: []
  type: TYPE_NORMAL
- en: It's just turning demand into a target cycle time for the process。
  prefs: []
  type: TYPE_NORMAL
- en: Once we have done the "tact" time， we can compute the target manpower。 The target
    manpower。
  prefs: []
  type: TYPE_NORMAL
- en: as we saw， is the ratio between the labor content and the tactime。 In our case，
    it was 5。33 person。
  prefs: []
  type: TYPE_NORMAL
- en: which was 120 seconds of labor content， divided by 22。5， seconds of the tact
    per unit。 So ideally。
  prefs: []
  type: TYPE_NORMAL
- en: we would like to hire 5。33 persons。 Since you cannot hire a third of a worker。
  prefs: []
  type: TYPE_NORMAL
- en: this is clearly not feasible， and we were rounding， this up to 6。 As we were
    seeing in a moment。
  prefs: []
  type: TYPE_NORMAL
- en: even 6 might not be enough。 The reason for that is that work cannot easily be
    divided into smaller chunks。
  prefs: []
  type: TYPE_NORMAL
- en: So for example， the cash register operation here， that takes 20 seconds。
  prefs: []
  type: TYPE_NORMAL
- en: It is a block or a chunk that we cannot move easily， force and pack。
  prefs: []
  type: TYPE_NORMAL
- en: And so you notice when you're allocating the activities across the resources
    here， the， employees。
  prefs: []
  type: TYPE_NORMAL
- en: even the bottleneck has some slack， has some idle time relative to the tactime。
    Again。
  prefs: []
  type: TYPE_NORMAL
- en: line balancing means that you take the tactime 22。5 seconds in our example，
    and。
  prefs: []
  type: TYPE_NORMAL
- en: then you spread out the activities from greeting the customer all the way to
    the cash register。
  prefs: []
  type: TYPE_NORMAL
- en: and you take to the constraint that no individual should have more work and
    their processing。
  prefs: []
  type: TYPE_NORMAL
- en: time than the tactime。 If you notice you're going above the tactime， well。
  prefs: []
  type: TYPE_NORMAL
- en: then you just move the work to the next， resource and continue until you found
    out that in this case。
  prefs: []
  type: TYPE_NORMAL
- en: we'll actually need 7 employees。 Now let me point out some subtlety that I find
    somewhat counterintuitive。
  prefs: []
  type: TYPE_NORMAL
- en: It's counterintuitive， at least for me， not sure about you。 So here because
    of the demand rate。
  prefs: []
  type: TYPE_NORMAL
- en: we said that even the bottleneck would have some idle， time。 Let's ignore that。
  prefs: []
  type: TYPE_NORMAL
- en: Let's make us capacity constraint and assume that we are running at the rate
    of the bottleneck。
  prefs: []
  type: TYPE_NORMAL
- en: which is producing a unit every 21 seconds。 We can then compute how much idle
    time each of the workers has。
  prefs: []
  type: TYPE_NORMAL
- en: It's going to be 5 seconds for the first worker， 0 for the second worker， 2
    seconds here for。
  prefs: []
  type: TYPE_NORMAL
- en: the next one， 7 seconds， 5 seconds， 7 seconds and 1 second。 Now how much idle
    time do we now have？
  prefs: []
  type: TYPE_NORMAL
- en: So we have 5 plus 0 plus 2 plus 7 plus 5 plus 7 plus 1。 We have 27 seconds per
    unit of idle time。
  prefs: []
  type: TYPE_NORMAL
- en: Do you remember how much idle time we had with 3 workers？ It was 18。 Well， less
    than the 27。
  prefs: []
  type: TYPE_NORMAL
- en: So as we specialize， that idle time is going to go up。 The more workers take
    on the work。
  prefs: []
  type: TYPE_NORMAL
- en: the harder will it be to find a perfect balance。 As I said， I find this counter-intuitive。
  prefs: []
  type: TYPE_NORMAL
- en: Today we talked about improvement strategies。 We talked about offloading the
    bottleneck。
  prefs: []
  type: TYPE_NORMAL
- en: We talked about balancing the line using the concept of tech time。
  prefs: []
  type: TYPE_NORMAL
- en: We have not yet talked about specialization。 So here we go。 Adam Smith。
  prefs: []
  type: TYPE_NORMAL
- en: the famous philosopher and economist， wrote about the benefits of specialization
    already。
  prefs: []
  type: TYPE_NORMAL
- en: in the 18th century。 First looked at a pin factory。
  prefs: []
  type: TYPE_NORMAL
- en: You see a picture of a pin factory here and a quote from Adam Smith that nicely
    captures。
  prefs: []
  type: TYPE_NORMAL
- en: the concept of specialization。 Now it is a stretch to move from a pin factory
    to a subway restaurant。
  prefs: []
  type: TYPE_NORMAL
- en: but let me try。 What benefits might we get in our subway restaurant as a result
    of specialization？
  prefs: []
  type: TYPE_NORMAL
- en: I propose that we would benefit in at least four ways。 First。
  prefs: []
  type: TYPE_NORMAL
- en: think of a reduction in processing times due to elimination of setups。
  prefs: []
  type: TYPE_NORMAL
- en: The times of the various activities might be reduced and thus the capacity levels
    increased。
  prefs: []
  type: TYPE_NORMAL
- en: as workers specialized in fewer activities。 For example。
  prefs: []
  type: TYPE_NORMAL
- en: an employee who is doing all the activities might have to take off his gloves。
  prefs: []
  type: TYPE_NORMAL
- en: when he switches between touching a sandwich and operating the cash register，
    which would。
  prefs: []
  type: TYPE_NORMAL
- en: increase his or her processing time。 A person who does nothing but operate the
    cash register would not face such an inconvenience。
  prefs: []
  type: TYPE_NORMAL
- en: Oftentimes such disruptions are referred to as setup times。 Second。
  prefs: []
  type: TYPE_NORMAL
- en: I can imagine a reduction in processing times due to learning。
  prefs: []
  type: TYPE_NORMAL
- en: If you cut a thousand tomatoes per day， chances are you'll get pretty good at
    that。 Simply put。
  prefs: []
  type: TYPE_NORMAL
- en: practice makes perfect and this perfection also manifests itself in shorter，
    processing times。
  prefs: []
  type: TYPE_NORMAL
- en: Third， we can potentially get away with lower skilled labor。
  prefs: []
  type: TYPE_NORMAL
- en: More specialized labor tends to require a shorter training period and oftentimes
    receives。
  prefs: []
  type: TYPE_NORMAL
- en: lower wages。 It takes less time to teach an employee how to assemble a review
    mirror compared to teaching。
  prefs: []
  type: TYPE_NORMAL
- en: her how to assemble an entire car。 So even if specialization does not decrease
    the processing times。
  prefs: []
  type: TYPE_NORMAL
- en: it can still save us， money。 Finally， I think about the need for equipment replication。
  prefs: []
  type: TYPE_NORMAL
- en: Another benefit of the specialized process flow relates to the amount of equipment
    that。
  prefs: []
  type: TYPE_NORMAL
- en: is needed to operate the process。 Six parallelization in which each employee
    carries out all the activities would require。
  prefs: []
  type: TYPE_NORMAL
- en: that each employee would get her own equipment， including a cash register， which
    is rather。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9b6fd09fcb13737b41c5937ff2ba7bb5_7.png)'
  prefs: []
  type: TYPE_IMG
- en: expensive。 Again all of these benefits have to be weighed against the cost of
    specialization。
  prefs: []
  type: TYPE_NORMAL
- en: As we specialize， the idle time is going up， which at least to me was somewhat
    counterintuitive。
  prefs: []
  type: TYPE_NORMAL
- en: Moreover the coordination needs and the interdependence among the workers are
    increasing。
  prefs: []
  type: TYPE_NORMAL
- en: If I have only one person who can slice tomatoes and that person does not show
    up for the job。
  prefs: []
  type: TYPE_NORMAL
- en: I have a problem。 In contrast， if each employee is capable of making a whole
    sandwich from beginning to。
  prefs: []
  type: TYPE_NORMAL
- en: end， my process is much more robust。 This might not be a big deal in the production
    of a sandwich。
  prefs: []
  type: TYPE_NORMAL
- en: but it is a super hot topic， in producing cars and phones in today's global
    and interdependence supply chains。
  prefs: []
  type: TYPE_NORMAL
- en: Okay， enough about the 18th century。 In the next video we will talk about flying
    to Mars。
  prefs: []
  type: TYPE_NORMAL
- en: It should be a nice contrast to the regression in history。 See you then。 [BLANK_AUDIO]。
  prefs: []
  type: TYPE_NORMAL
