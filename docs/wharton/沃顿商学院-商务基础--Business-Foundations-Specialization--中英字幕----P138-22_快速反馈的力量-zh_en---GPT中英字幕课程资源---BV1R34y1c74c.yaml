- en: 沃顿商学院《商务基础》｜Business Foundations Specialization｜（中英字幕） - P138：22_快速反馈的力量.zh_en
    - GPT中英字幕课程资源 - BV1R34y1c74c
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When I was a student in Business and Computer Science at the University of Manheim，
    all。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/407f7cf471c9e15a5aa690bfcb27704d_1.png)'
  prefs: []
  type: TYPE_IMG
- en: my grades from my diploma， almost five years of studies， were determined within
    a couple， of weeks。
  prefs: []
  type: TYPE_NORMAL
- en: I would take my courses in computer network design， econometrics or production
    planning。
  prefs: []
  type: TYPE_NORMAL
- en: but I would basically get no feedback that I completed all courses and it would
    enroll。
  prefs: []
  type: TYPE_NORMAL
- en: in the final examination process。 The fact that these were four。
  prefs: []
  type: TYPE_NORMAL
- en: five hour long exams and followed by oral examinations that。
  prefs: []
  type: TYPE_NORMAL
- en: were held in public didn't make this any more fun。
  prefs: []
  type: TYPE_NORMAL
- en: Contrast this with the approach of frequent testing and examination that we
    now have in。
  prefs: []
  type: TYPE_NORMAL
- en: most business schools and colleges。 It doesn't matter if you want to improve
    your tennis serve or your operations management。
  prefs: []
  type: TYPE_NORMAL
- en: skills。 Learning and improvement is based on feedback and the sooner you can
    get that feedback。
  prefs: []
  type: TYPE_NORMAL
- en: the faster world you'll learn。 In today's video I want to talk about quick feedback。
    Sakichi Toyota。
  prefs: []
  type: TYPE_NORMAL
- en: the founder of the Toyota company， had invented the power loom at the， end of
    the 19th century。
  prefs: []
  type: TYPE_NORMAL
- en: It was the first automated loom。 Now that the loom was automated， it don't need
    an operator。
  prefs: []
  type: TYPE_NORMAL
- en: But then what do you do when things go wrong？ Now in his brilliance Mr。
  prefs: []
  type: TYPE_NORMAL
- en: Toyota had the idea that the loom itself should detect if it was。
  prefs: []
  type: TYPE_NORMAL
- en: running out of threat or something else was broken。
  prefs: []
  type: TYPE_NORMAL
- en: And in that case it should stop and alert an operator to come。 Detect， stop
    alert。
  prefs: []
  type: TYPE_NORMAL
- en: Whenever there's a problem in a process it is critical that we quickly recognize
    there's， a problem。
  prefs: []
  type: TYPE_NORMAL
- en: We then need to stop what we're doing and we need to alert management or our
    coworkers。
  prefs: []
  type: TYPE_NORMAL
- en: to fix the problem and to think about preventing that problem in the future。
    Why is it a good idea？
  prefs: []
  type: TYPE_NORMAL
- en: An analogy from coaching might again be helpful。 If you're coaching somebody
    how to play tennis。
  prefs: []
  type: TYPE_NORMAL
- en: how to swim or how to sing， providing feedback， is critical and feedback is
    the most useful really when it is given quickly。
  prefs: []
  type: TYPE_NORMAL
- en: So really in the remainder of the video we'll talk about detecting when something
    abnormal。
  prefs: []
  type: TYPE_NORMAL
- en: happens after all defects hopefully are something abnormal in the operation。
  prefs: []
  type: TYPE_NORMAL
- en: And we want to do that detection as quickly as possible。
  prefs: []
  type: TYPE_NORMAL
- en: Now I'm by no means a school of the Japanese language but the term jidoka is
    a simple Wikipedia。
  prefs: []
  type: TYPE_NORMAL
- en: search reveals， stands for automation and some degree of self-consciousness
    or self-awareness。
  prefs: []
  type: TYPE_NORMAL
- en: And so the loom in the Toyota plant is realizing by itself that it is broken
    hence this idea。
  prefs: []
  type: TYPE_NORMAL
- en: of jidoka， detect， stop alert。 Now when Toyota moved into the assembly line
    world for the automotive production they basically。
  prefs: []
  type: TYPE_NORMAL
- en: embodied the principle of jidoka into something that is known as the unknown
    court。
  prefs: []
  type: TYPE_NORMAL
- en: The unknown court is a literally a court that runs adjacent to the assembly
    line， the workers。
  prefs: []
  type: TYPE_NORMAL
- en: on the line are empowered to pull the court when they detect a problem， when
    that happens。
  prefs: []
  type: TYPE_NORMAL
- en: the line is stopped and through the end and board， which is a board that you
    see here。
  prefs: []
  type: TYPE_NORMAL
- en: on the picture， the supervisor is alerted of the problem。 Detect， stop alert。
  prefs: []
  type: TYPE_NORMAL
- en: There's alert then to address some form of problem solving intervention。
  prefs: []
  type: TYPE_NORMAL
- en: So the end and court supports a quick feedback to the operators and to the foreman。
  prefs: []
  type: TYPE_NORMAL
- en: A huge hindrance or a huge delay when it comes to feedback has to do with inventory。
  prefs: []
  type: TYPE_NORMAL
- en: Imagine you have a process flow and you have two consecutive resources with
    the buffer， in between。
  prefs: []
  type: TYPE_NORMAL
- en: Safe for sake of argument the processing times at each of the resources are
    one minute per， unit。
  prefs: []
  type: TYPE_NORMAL
- en: Now imagine we are making these circuits here one by one but at some point the
    first。
  prefs: []
  type: TYPE_NORMAL
- en: resource makes a mistake。 Instead of producing a circuit say it produces a square。
  prefs: []
  type: TYPE_NORMAL
- en: Ask yourself how long will it take the second resource to find out about the
    mistake？
  prefs: []
  type: TYPE_NORMAL
- en: Well if there's a lot of inventory for example if there are six or seven units
    of inventory。
  prefs: []
  type: TYPE_NORMAL
- en: in between the stations and the flow is at one minute per flow unit in that
    case it would。
  prefs: []
  type: TYPE_NORMAL
- en: take six or seven minutes until the second resource realizes that there's a
    mistake。
  prefs: []
  type: TYPE_NORMAL
- en: But what happens in the meantime？ Well chances are that the first resource since
    it didn't get any feedback keeps on making。
  prefs: []
  type: TYPE_NORMAL
- en: the same stupid mistake。 Now in contrast imagine we would reduce the inventory
    level and we would only have one。
  prefs: []
  type: TYPE_NORMAL
- en: or two units in the buffer between the two resources。
  prefs: []
  type: TYPE_NORMAL
- en: Again what happens when the first resource makes a mistake？ Now the feedback
    comes in much quicker。
  prefs: []
  type: TYPE_NORMAL
- en: We thereby learn faster and avoid that we make further mistakes。
  prefs: []
  type: TYPE_NORMAL
- en: So you notice that a really inventory is delaying the feedback。 Inventory is
    covering up defect。
  prefs: []
  type: TYPE_NORMAL
- en: This is why it's oftentimes referred to as one of the most evil sources of waste。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/407f7cf471c9e15a5aa690bfcb27704d_3.png)'
  prefs: []
  type: TYPE_IMG
- en: And often use visualization of this effect that inventory is covering up defects
    and problems。
  prefs: []
  type: TYPE_NORMAL
- en: is in the form of this picture。 A boat on the river。
  prefs: []
  type: TYPE_NORMAL
- en: Imagine you're operating a canal or lake and in that lake you have a bunch of
    rocks。
  prefs: []
  type: TYPE_NORMAL
- en: You're using these boats here with an expensive cargo and so you really want
    to avoid that。
  prefs: []
  type: TYPE_NORMAL
- en: the boat hits the rock。 So what do you do？ Well on the one hand it's very tempting
    to increase the water level。
  prefs: []
  type: TYPE_NORMAL
- en: That makes it just less likely that the boat ever hits the rock。 What's wrong
    with that？
  prefs: []
  type: TYPE_NORMAL
- en: Well now that the water is so high you'll actually don't see the rocks and you'll
    always。
  prefs: []
  type: TYPE_NORMAL
- en: have them underneath the surface。 The opposing argument is that rather than
    increasing the water level you should actually。
  prefs: []
  type: TYPE_NORMAL
- en: decrease it。 Yes you will face a short term problem in the sense that you might
    bump into a rock but。
  prefs: []
  type: TYPE_NORMAL
- en: it's the only way that makes you sure that the rock ultimately is removed。
  prefs: []
  type: TYPE_NORMAL
- en: And once you've removed the rock what you do instead of comfortably sailing
    you're then。
  prefs: []
  type: TYPE_NORMAL
- en: going to reduce the water level again。 You get ready for removing the next rock。
  prefs: []
  type: TYPE_NORMAL
- en: The same can be said about buffer and inventory。 Rather than buffering every
    problem， setups。
  prefs: []
  type: TYPE_NORMAL
- en: transports， pull line balancing or defects， away the idea of the Toyota production
    system is to reduce your inventory so that those。
  prefs: []
  type: TYPE_NORMAL
- en: problems get exposed。 Only once the problems are exposed will you see the problem
    and have the pressure to solve。
  prefs: []
  type: TYPE_NORMAL
- en: them。 You don't rest on your laurels but you reduce the inventory further。
  prefs: []
  type: TYPE_NORMAL
- en: And now we talked about command cards in the lean module。
  prefs: []
  type: TYPE_NORMAL
- en: Command cards come in as a way for management to intentionally to purposefully
    reduce the。
  prefs: []
  type: TYPE_NORMAL
- en: inventory level in the process。 Remember from the lean module that you can never
    have more inventory than you authorize。
  prefs: []
  type: TYPE_NORMAL
- en: through the command cards。 So exposing problems instead of hiding them is a
    key to G-doker。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/407f7cf471c9e15a5aa690bfcb27704d_5.png)'
  prefs: []
  type: TYPE_IMG
- en: Another way to provide feedback to those operating the process is to use a statistics。
  prefs: []
  type: TYPE_NORMAL
- en: This is the idea of statistical process control or control charts。
  prefs: []
  type: TYPE_NORMAL
- en: What you're doing is you're tracking an outcome variable such as a weight of
    M&M， such as。
  prefs: []
  type: TYPE_NORMAL
- en: a curvature of a cucumber or the height of a steersupport column and you're
    tracking that。
  prefs: []
  type: TYPE_NORMAL
- en: number over time。 You're mapping that out in a graph that includes two limits
    known as a control limit。
  prefs: []
  type: TYPE_NORMAL
- en: So basically the 95th percentile confidence intervals of pass data。
  prefs: []
  type: TYPE_NORMAL
- en: So when the current observed unit falls out of that interval you know something
    abnormal。
  prefs: []
  type: TYPE_NORMAL
- en: most likely something wrong has happened。 Now please don't confuse these control
    limits which are based on the 95th percentile interval。
  prefs: []
  type: TYPE_NORMAL
- en: of pass data that you observed in the process。 Please don't confuse those with
    specification limits that are introduced in the video of。
  prefs: []
  type: TYPE_NORMAL
- en: Six Sigma。 Specification limits come from the customer。
  prefs: []
  type: TYPE_NORMAL
- en: Control limits come from pass process performance。
  prefs: []
  type: TYPE_NORMAL
- en: Again such data provide you feedback to what extent the process is currently
    deviating from。
  prefs: []
  type: TYPE_NORMAL
- en: pass performance。 Now from the automated looms of Saki。
  prefs: []
  type: TYPE_NORMAL
- en: Chitoyoda to monitoring a process continuously using。
  prefs: []
  type: TYPE_NORMAL
- en: statistics the principle of G-doker is in my view and evergreen。
  prefs: []
  type: TYPE_NORMAL
- en: And something abnormal happens I want to somehow detect it as quickly as possible
    and。
  prefs: []
  type: TYPE_NORMAL
- en: I as a manage of the process want to be alerted sooner rather than later。 Detect
    stop alert。
  prefs: []
  type: TYPE_NORMAL
- en: One more thought about the stopping part of Chitoyoda。
  prefs: []
  type: TYPE_NORMAL
- en: Why do you think it is important to stop the line？
  prefs: []
  type: TYPE_NORMAL
- en: One reason clearly is that it makes little sense to keep on running a machine
    that is， broken。
  prefs: []
  type: TYPE_NORMAL
- en: It's just like trying to run a job through a jam printer。
  prefs: []
  type: TYPE_NORMAL
- en: But there's another beauty in the stop part of Chitoyoda。
  prefs: []
  type: TYPE_NORMAL
- en: By stopping normal operation in the case of a plant by stopping the production
    line we。
  prefs: []
  type: TYPE_NORMAL
- en: send a very clear signal that something is wrong。 We focus attention on fixing
    the problem。
  prefs: []
  type: TYPE_NORMAL
- en: That doesn't sharp contrast to what I oftentimes see in healthcare。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/407f7cf471c9e15a5aa690bfcb27704d_7.png)'
  prefs: []
  type: TYPE_IMG
- en: My former colleague Anita Takah now at Boston University has done a number of
    studies on。
  prefs: []
  type: TYPE_NORMAL
- en: what nurses do when they encounter a problem。 What do they do？ They work around
    the problem。
  prefs: []
  type: TYPE_NORMAL
- en: They improvise。 They find a solution so that they can go on with their work
    and help the patient。
  prefs: []
  type: TYPE_NORMAL
- en: Now notice that such behavior is first and foremost something that we should
    have brought。
  prefs: []
  type: TYPE_NORMAL
- en: And maybe this is a good moment for us to say thank you to all the nurses and
    caregivers。
  prefs: []
  type: TYPE_NORMAL
- en: for the great work and service they provide to society。
  prefs: []
  type: TYPE_NORMAL
- en: But even if the nurse files a report about that problem afterwards more often
    than not。
  prefs: []
  type: TYPE_NORMAL
- en: nothing happens。 The organization never develops a sense of urgency。
  prefs: []
  type: TYPE_NORMAL
- en: So all management knows that whenever the next problem pops up the nurse will
    once again。
  prefs: []
  type: TYPE_NORMAL
- en: improvise and find a solution。 So stopping the process is a big deal。
  prefs: []
  type: TYPE_NORMAL
- en: It puts long term quality over short term revenue goals。
  prefs: []
  type: TYPE_NORMAL
- en: With that being said it is time for me to stop and I see you in the next video。
    [BLANK_AUDIO]。
  prefs: []
  type: TYPE_NORMAL
