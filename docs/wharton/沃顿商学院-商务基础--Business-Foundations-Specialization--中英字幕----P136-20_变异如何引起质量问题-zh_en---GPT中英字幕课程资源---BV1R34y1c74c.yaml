- en: 沃顿商学院《商务基础》｜Business Foundations Specialization｜（中英字幕） - P136：20_变异如何引起质量问题.zh_en
    - GPT中英字幕课程资源 - BV1R34y1c74c
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In some of the previous modules， we talked about variation and flow。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f2bc883c24695ccc21af0f0ff02104db_1.png)'
  prefs: []
  type: TYPE_IMG
- en: We saw that this variation was a result of variation in demand and variation
    within our process。
  prefs: []
  type: TYPE_NORMAL
- en: In this module， we continue our focus on variation。 However。
  prefs: []
  type: TYPE_NORMAL
- en: we shift from the process flow perspective to looking at the actual work and
    the quality with which it is performed。
  prefs: []
  type: TYPE_NORMAL
- en: To motivate some of the challenges associated with consistently obtaining a
    high quality outcome。
  prefs: []
  type: TYPE_NORMAL
- en: let us look at the story of my bike crash that I told you at the beginning of
    this course。
  prefs: []
  type: TYPE_NORMAL
- en: I want to use this example to illustrate the role of variability in the occurrence
    of events such as an accident。
  prefs: []
  type: TYPE_NORMAL
- en: a defect or medical error。 My bike crash happened on a Saturday morning。
  prefs: []
  type: TYPE_NORMAL
- en: The brake cable turned loose and got stuck between the spinning wheel and the
    fork。
  prefs: []
  type: TYPE_NORMAL
- en: which sliced the fork into two pieces， and said， "Me， head first over the handle
    box。"。
  prefs: []
  type: TYPE_NORMAL
- en: How could such an accident happen？ And what was the role of variability？ Well。
  prefs: []
  type: TYPE_NORMAL
- en: like most always in life， lots of factors， lots of variables come together。
  prefs: []
  type: TYPE_NORMAL
- en: In the case of my bike crash， I was somewhat late for my team ride。
  prefs: []
  type: TYPE_NORMAL
- en: and so I didn't check my bike as carefully as I usually do。 Also。
  prefs: []
  type: TYPE_NORMAL
- en: I didn't have the bike with the mechanic for a while， as it was early in the
    season。
  prefs: []
  type: TYPE_NORMAL
- en: and the mechanic had a huge backlog。 So it wouldn't have taken much。
  prefs: []
  type: TYPE_NORMAL
- en: and this whole crash would never have happened。 But it would take much either。
  prefs: []
  type: TYPE_NORMAL
- en: and the whole crash would have been a lot worse。 I got lucky on multiple fronts。
    That morning。
  prefs: []
  type: TYPE_NORMAL
- en: I had an ambulance picking me up in minutes， my hammer took most of the crash。
  prefs: []
  type: TYPE_NORMAL
- en: and the pintrauma center had a relatively light morning。 Again， lots of things
    come together。
  prefs: []
  type: TYPE_NORMAL
- en: and they could determine the outcome。 Take a look at this figure here。
  prefs: []
  type: TYPE_NORMAL
- en: Customers and resources influence a number of input variables。
  prefs: []
  type: TYPE_NORMAL
- en: These are variables describing how the process is operated。
  prefs: []
  type: TYPE_NORMAL
- en: as well as the variables capturing human or machine behavior。 In the case of
    my bike ride。
  prefs: []
  type: TYPE_NORMAL
- en: the input variables are things that I controlled。 Did I leave on time？ Did I
    check my bike？
  prefs: []
  type: TYPE_NORMAL
- en: Did I bring the bike to the mechanic as needed？ And most importantly， did I
    wear a helmet？
  prefs: []
  type: TYPE_NORMAL
- en: In addition to these input variables， there exists a number of environmental
    variables that also impact the quality。
  prefs: []
  type: TYPE_NORMAL
- en: In contrast to input variables， environmental variables are not directly under
    the control of the operation。
  prefs: []
  type: TYPE_NORMAL
- en: In the case of my bike ride， the fact that there was an idle ambulance nearby
    was an environmental variable。
  prefs: []
  type: TYPE_NORMAL
- en: So was the quality of the road pavement and the weather。
  prefs: []
  type: TYPE_NORMAL
- en: Input and environmental variables come together， and they could determine the
    outcome variable of the process。
  prefs: []
  type: TYPE_NORMAL
- en: In the case of my crash， the outcome that I was discharged from the trauma center
    the same day。
  prefs: []
  type: TYPE_NORMAL
- en: was a little permanent damage， other than having no bunch of fake teeth。
  prefs: []
  type: TYPE_NORMAL
- en: Other outcome measures might be customer satisfaction， net promoter score。
  prefs: []
  type: TYPE_NORMAL
- en: or a defect on an assembly line。 Again， note that many input and environmental
    variables together。
  prefs: []
  type: TYPE_NORMAL
- en: they could determine the outcome。 Since we have variability in input and environmental
    variables。
  prefs: []
  type: TYPE_NORMAL
- en: we will have variability in the outcome variables。 Typically， when bad things
    happen。
  prefs: []
  type: TYPE_NORMAL
- en: a number of things have to be lined up against us。
  prefs: []
  type: TYPE_NORMAL
- en: This effect is often called the Swiss cheese model。 I kid you not。
  prefs: []
  type: TYPE_NORMAL
- en: The Swiss cheese model is really a technical term in the quality management
    literature。
  prefs: []
  type: TYPE_NORMAL
- en: The idea here is that a process is like a stack of slices of Swiss cheese。
  prefs: []
  type: TYPE_NORMAL
- en: Though it is very unlikely that you put 10 random slices of Swiss cheese on
    top of each other。
  prefs: []
  type: TYPE_NORMAL
- en: and still be able to see through the stack， it's possible。 Just like Swiss cheese
    has random holes。
  prefs: []
  type: TYPE_NORMAL
- en: processes have random variations。 And when there's a bad outcome happening。
  prefs: []
  type: TYPE_NORMAL
- en: multiple sources of randomness are typically stacked up against you。
  prefs: []
  type: TYPE_NORMAL
- en: This bad alignment of sources of variation is just like being able to see through
    the entire stack of Swiss cheese。
  prefs: []
  type: TYPE_NORMAL
- en: So really bad outcomes don't happen because of one deviation in the process。
  prefs: []
  type: TYPE_NORMAL
- en: They tend to be the result of many small problems。
  prefs: []
  type: TYPE_NORMAL
- en: Disaster strike when all the holes in the Swiss cheese line up。 Alright。
  prefs: []
  type: TYPE_NORMAL
- en: enough of the Swiss cheese stuff。 Let's talk a little bit more about quality。
    So now。
  prefs: []
  type: TYPE_NORMAL
- en: when you're diagnosing a bad outcome， let's call this a defect。
  prefs: []
  type: TYPE_NORMAL
- en: we need to find the input or the environmental variables that cause the defect。
  prefs: []
  type: TYPE_NORMAL
- en: Those variables will be called the root cause of the defect。 Now even in the
    well managed operation。
  prefs: []
  type: TYPE_NORMAL
- en: input variables and environmental variables will always suffer from some randomness。
  prefs: []
  type: TYPE_NORMAL
- en: And that will yield variation and the quality of the outcome。
  prefs: []
  type: TYPE_NORMAL
- en: Not that quality problems are always variability problems。
  prefs: []
  type: TYPE_NORMAL
- en: Since we never can eliminate all variability in the process。
  prefs: []
  type: TYPE_NORMAL
- en: we want to build processes in which variability in input and environmental variables
    do not automatically translate into a bad outcome。
  prefs: []
  type: TYPE_NORMAL
- en: Such processes are called robust processes。 A process is robust。
  prefs: []
  type: TYPE_NORMAL
- en: If it still leads to a good outcome， even when there's variability in inputs
    and environmental variables。
  prefs: []
  type: TYPE_NORMAL
- en: In the remainder of the module， I want to talk about how to use this framework
    to improve quality。
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the source of variation in the process is really the first step。
  prefs: []
  type: TYPE_NORMAL
- en: So in the next session， I'm going to talk about how to quantify variation in
    the process。
  prefs: []
  type: TYPE_NORMAL
- en: In particular， I will introduce the concepts of 6 Sigma and process capability。
  prefs: []
  type: TYPE_NORMAL
- en: We then move on to discuss how you monitor the current process behavior over
    time。
  prefs: []
  type: TYPE_NORMAL
- en: We determine if the variation that you measure in the process at a particular
    moment in time is just random noise or whether it should be seen as something
    abnormal。
  prefs: []
  type: TYPE_NORMAL
- en: We want to find defects as quickly and as early as possible so that we can intervene。
  prefs: []
  type: TYPE_NORMAL
- en: In that context， we'll talk about control charts， the detect stop alert method
    and the need for quick feedback。
  prefs: []
  type: TYPE_NORMAL
- en: Once we know that something bad has happened in our process， we have to take
    action， right？
  prefs: []
  type: TYPE_NORMAL
- en: And for this， we have to find the root cause。 To find the root cause。
  prefs: []
  type: TYPE_NORMAL
- en: we'll discuss the 5Y framework， fishbone diagrams and parabedo charts。 And then
    finally。
  prefs: []
  type: TYPE_NORMAL
- en: once you have found your root causes， you have to eliminate them。
  prefs: []
  type: TYPE_NORMAL
- en: You have to prevent the root causes from needing to bad outcomes again in the
    future。 For that。
  prefs: []
  type: TYPE_NORMAL
- en: I'll show you a couple of frameworks including the Y-How letter and food proofing
    a process， i。e。
  prefs: []
  type: TYPE_NORMAL
- en: making it more robust。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f2bc883c24695ccc21af0f0ff02104db_3.png)'
  prefs: []
  type: TYPE_IMG
- en: Well， that's a roadmap for this quality module。 I have to confess that this
    narrative is not always the exact way that quality problems are tackled in practice。
  prefs: []
  type: TYPE_NORMAL
- en: But I wanted to give you a big picture framework on how the set of tools that
    we will discuss in this module fit together。
  prefs: []
  type: TYPE_NORMAL
- en: I find all of these tools helpful， otherwise I would not have included them
    in the scores。
  prefs: []
  type: TYPE_NORMAL
- en: which ones you will use， the most in your work， will certainly depend on what
    type of work you're doing。
  prefs: []
  type: TYPE_NORMAL
- en: In my view， the qualitative non-mathematica tools in many operations courses
    don't really get the attention that they deserve。
  prefs: []
  type: TYPE_NORMAL
- en: Framework like the detect stop alert method， root cause problem solving and
    the Y-How letter。
  prefs: []
  type: TYPE_NORMAL
- en: none of them might end up on the final exam。 But in my experience。
  prefs: []
  type: TYPE_NORMAL
- en: all of them have been super useful tools to have in your operations management
    toolbox。
  prefs: []
  type: TYPE_NORMAL
- en: I see you in the next video。 [BLANK_AUDIO]。
  prefs: []
  type: TYPE_NORMAL
